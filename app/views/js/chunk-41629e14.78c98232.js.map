{"version":3,"sources":["webpack:///./src/assets/utils/html2dom.js","webpack:///./node_modules/core-js/modules/es.string.replace-all.js","webpack:///src/components/resources/code/Tests.vue","webpack:///./src/components/resources/code/Tests.vue?41ab","webpack:///./src/components/resources/code/Tests.vue?e789","webpack:///./src/components/resources/code/Tests.vue"],"names":["html2dom","ids","src","decl","parse","strToSrc","dom2html","js","callback","errback","_iframe","document","getElementById","onload","this","contentWindow","eval","container","appendChild","docFragment","innerHTML","onerror","err","srcdoc","htmlsource","parser","DOMParser","doc","parseFromString","walkNodes","body","mkId","node","name","nodeName","replace","nodeType","Node","ELEMENT_NODE","hasAttribute","id","toLowerCase","Object","defineProperty","configurable","writable","i","length","push","h2d_nodeID","encodeForAttribute","s","c","charCodeAt","toString","newSrc","JSON","stringify","toSource","match","newElement","el_name","newAttribute","attr","val","indexOf","newComment","cmt","appendToParent","par","root","iter","createNodeIterator","NodeFilter","SHOW_ALL","nextNode","nodeDescr","nodeValue","parentName","parentNode","j","attributes","a","v","value","undefined","TEXT_NODE","textContent","COMMENT_NODE","console","log","$","global","call","uncurryThis","requireObjectCoercible","isCallable","isRegExp","getMethod","regExpFlags","getSubstitution","wellKnownSymbol","IS_PURE","REPLACE","RegExpPrototype","RegExp","prototype","TypeError","getFlags","stringSlice","slice","max","Math","stringIndexOf","string","searchValue","fromIndex","target","proto","replaceAll","replaceValue","IS_REG_EXP","flags","replacer","searchString","functionalReplace","searchLength","advanceBy","replacement","O","position","endOfLastMatch","result","props","resource","errors","logs","data","dialog","dialogDelete","headers","text","align","sortable","headers2","editedIndex","editedItem","input","output","expected","defaultItem","code","nTestsSuccess","computed","formTitle","tests","getErrors","mapGetters","watch","methods","mapMutations","newTest","Swal","run","setTimeout","res","lines","count","test","status","getColor","item","editItem","deleteItem","deleteItemConfirm","close","closeDelete","save","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","_v","scopedSlots","_u","key","fn","ref","on","_b","model","$$v","expression","_s","$set","proxy","items","toggle","isOpen","type","alias","options","showExpected","staticRenderFns","component","VBtn","VCard","VCardActions","VCardText","VCardTitle","VChip","VCol","VContainer","VDataTable","VDialog","VIcon","VListItem","VListItemAvatar","VListItemContent","VList","VListItemSubtitle","VListItemTitle","VRow","VSpacer","VTextField","VToolbar"],"mappings":"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","file":"js/chunk-41629e14.78c98232.js","sourcesContent":["export const html2dom = (function () {\r\n    \"use strict\";\r\n    /*\r\n     * There is no guarantee as to what might happen if the things supplied to html2dom are not valid html.\r\n     * It's also fairly certain that your html will be mutated. Attributes might shift positions and attribute\r\n     values without quotation mark will probably get quotes. Single quotes might be turned into double quotes.\r\n     */\r\n\r\n    let ids = {};\r\n    let src = \"\";\r\n\r\n    // config for output\r\n    //var q = \"'\";\r\n    var decl = \"let\";\r\n\r\n    return {\r\n        parse: parse,\r\n        html2dom: parse,\r\n        strToSrc: strToSrc,\r\n        dom2html: dom2html\r\n    };\r\n\r\n    function dom2html(js, callback, errback) {\r\n        // takes JS source and executes it to get HTML from it.\r\n\r\n        let _iframe = document.getElementById(\"iframe\");\r\n        if (_iframe == null) { errback(\"This function requires this iframe attribute in the DOM: iframe id=\\\"iframe\\\" src=\\\"data:text/html;charset=utf-8,<div id='container'></div>\\\" sandbox=\\\"allow-same-origin\\\"></iframe>\"); }\r\n        // _iframe.sandbox = \"allow-same-origin\";\r\n        // _iframe.src = \"data:text/html;charset=utf-8,<div id='container'></div>\";\r\n\r\n        _iframe.onload = function () {\r\n            this.contentWindow.eval(js);// magic :D\r\n            this.contentWindow.container.appendChild(this.contentWindow.docFragment);\r\n            // ^--- once we do this, there might not be a body element anymore :S\r\n            if (typeof callback == \"function\") {\r\n                callback(this.contentWindow.container.innerHTML);\r\n            }\r\n        };\r\n        _iframe.onerror = function (err) {\r\n            if (typeof errback == \"function\") {\r\n                errback(err);\r\n            }\r\n        };\r\n        // _iframe.contentWindow.location.reload();\r\n        _iframe.srcdoc = \"<div id='container'></div>\";\r\n    }\r\n\r\n    function parse(htmlsource) {\r\n        let parser = new DOMParser();\r\n        let doc = parser.parseFromString(htmlsource, \"text/html\");\r\n        // reset state..\r\n        src = \"\";\r\n        ids = {};\r\n\r\n        //TODO work around the body thing...\r\n        walkNodes(doc.body); // using body because domparser always creates html, head, body\r\n        return src;\r\n    }\r\n\r\n    function mkId(node) {\r\n        let name = node.nodeName.replace(/[^a-zA-Z0-9]/g, \"\");\r\n        if ((node.nodeType == Node.ELEMENT_NODE) && (node.hasAttribute(\"id\"))) {\r\n            name = node.id.replace(/[^a-zA-Z0-9]/g, \"\");\r\n        }\r\n        name = name.toLowerCase(); //XXX use appropriate CamelCase or whatever coding guidelines say      cnt++;\r\n        //TODO: replace h2d_nodeID attribute with a WeakMap, once browser support it.\r\n        Object.defineProperty(node, \"h2d_nodeID\", { configurable: true, writable: true }); // this looks like an awful hack. in fact...it is! :/\r\n        if (name in ids) {\r\n            let i = ids[name].length - 1;\r\n            ids[name].push(name + \"_\" + i);\r\n            node.h2d_nodeID = name + \"_\" + i;\r\n        }\r\n        else {\r\n            ids[name] = [name];\r\n            node.h2d_nodeID = name;\r\n        }\r\n    }\r\n    function encodeForAttribute(s) {\r\n        return s.replace(/[<>&'\"/]/gi, function (c) { return \"&#x\" + c.charCodeAt(0).toString(16) + \";\"; });\r\n    }\r\n    function strToSrc(s) {\r\n        /* If the browser has JSON support, we can just JSON.stringify() to get a properly quoted string back.\r\n         * If not: String.toSource() gives us (new String(\"foobar\")), this is a bit ugly.\r\n         * the upside is, that it does string escaping for us.\r\n         * so we use String.toSource() and regex-search for the inner part.\r\n         */\r\n        let newSrc;\r\n        if (typeof JSON != \"undefined\") {\r\n            newSrc = JSON.stringify(s); // this works quite great on strings :)\r\n        }\r\n        else {\r\n            newSrc = (s.toSource()).match(/\\(new String\\((.+)\\)\\)/)[1];\r\n        }\r\n        // replace masked Identifiers:\r\n        // e.g., \"I want $$candy$$\" --> \"I want \"+ candy\r\n        newSrc = newSrc.replace(/\\$\\$([^\"$]+)\\$\\$/g, \"\\\"+ $1 +\\\"\");\r\n        return newSrc;\r\n    }\r\n    function newElement(node, el_name) {\r\n        if (!(\"h2d_nodeID\" in node)) { mkId(node); }\r\n        if (el_name == \"SCRIPT\") { //XXX use a more generic way than this hard coded blacklist\r\n            src += \"//XXX CSP will forbid inline JavaScript!\\n\";\r\n        }\r\n        src += `\\n${decl} ${node.h2d_nodeID} = document.createElement(${strToSrc(el_name.toLowerCase())});\\n`;\r\n    }\r\n    function newAttribute(node, attr, val) {\r\n        //XXX TODO: use el.id = .. instead of el.setAttribute(\"id\", ..) for those attributes that allow it.\r\n        if (attr.indexOf(\"on\") == 0) { //XXX use a more generic way than this hard coded blacklist\r\n            src += \"//XXX CSP will forbid inline JavaScript and event handlers. Use addEventHandler instead!\\n\";\r\n        }\r\n        if (attr == \"style\") { //XXX use a more generic way than this hard coded blacklist\r\n            src += \"//XXX CSP will forbid inline styles. Use ``\" + node.h2d_nodeID + \".style'' instead of setAttribute.\\n\";\r\n        }\r\n        val = encodeForAttribute(val);\r\n        src += `${node.h2d_nodeID}.setAttribute(${strToSrc(attr)}, ${strToSrc(val)});\\n`;\r\n    }\r\n\r\n    function newComment(node, cmt) {\r\n        if (!(\"h2d_nodeID\" in node)) { mkId(node); }\r\n        src += `${decl} ${node.h2d_nodeID} = document.createComment(${strToSrc(cmt)});\\n`;\r\n    }\r\n    function appendToParent(par, node) {\r\n        src += `${par}.appendChild(${node.h2d_nodeID});\\n`;\r\n    }\r\n\r\n    function walkNodes(root) {\r\n        let iter = document.createNodeIterator(root, NodeFilter.SHOW_ALL, null, false);\r\n        let node;\r\n        // eslint-disable-next-line no-cond-assign\r\n        while (node = iter.nextNode()) {\r\n            let nodeDescr = node + \", name: \" + node.nodeName + \", type: \" + node.nodeType;\r\n            if (node.nodeValue != null) {\r\n                nodeDescr += \", value:\" + strToSrc(node.nodeValue);\r\n            }\r\n            if (node == root) {\r\n                if (src.indexOf(\"docFragment\") != 0) {\r\n                    // FIXME replace var with let but find a way to address through frame.contentWindow.docFragment\r\n                    src += `var docFragment = document.createDocumentFragment(); // contains all gathered nodes\\n`;\r\n                    // set fixed id (hackish..)...\r\n                    Object.defineProperty(node, \"h2d_nodeID\", { configurable: true, writable: true });\r\n                    node.h2d_nodeID = \"docFragment\";\r\n                    continue; // don't add root element (body)\r\n                }\r\n            }\r\n            else {\r\n                var parentName = node.parentNode.h2d_nodeID;\r\n            }\r\n            if (node.nodeType == Node.ELEMENT_NODE) { // ELEMENT_NODE == 1\r\n                newElement(node, node.nodeName);\r\n                // let's replace attributes\r\n                for (let j = 0; j < node.attributes.length; j++) {\r\n                    let a = node.attributes[j].name;\r\n                    let v = node.attributes[j].value;\r\n                    newAttribute(node, a, v);\r\n                }\r\n                if (parentName != undefined) { appendToParent(parentName, node); }\r\n            }\r\n            else if (node.nodeType == Node.TEXT_NODE) {\r\n                src += `${parentName}.append(${strToSrc(node.textContent)});\\n`;\r\n            }\r\n            else if (node.nodeType == Node.COMMENT_NODE) { // 3\r\n                newComment(node, node.nodeValue);\r\n                if (parentName != undefined) { appendToParent(parentName, node); }\r\n            }\r\n            else {\r\n                console.log(\"Unknown Node Type: \" + nodeDescr);\r\n            }\r\n        }\r\n    }\r\n})();","'use strict';\nvar $ = require('../internals/export');\nvar global = require('../internals/global');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar isCallable = require('../internals/is-callable');\nvar isRegExp = require('../internals/is-regexp');\nvar toString = require('../internals/to-string');\nvar getMethod = require('../internals/get-method');\nvar regExpFlags = require('../internals/regexp-flags');\nvar getSubstitution = require('../internals/get-substitution');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar REPLACE = wellKnownSymbol('replace');\nvar RegExpPrototype = RegExp.prototype;\nvar TypeError = global.TypeError;\nvar getFlags = uncurryThis(regExpFlags);\nvar indexOf = uncurryThis(''.indexOf);\nvar replace = uncurryThis(''.replace);\nvar stringSlice = uncurryThis(''.slice);\nvar max = Math.max;\n\nvar stringIndexOf = function (string, searchValue, fromIndex) {\n  if (fromIndex > string.length) return -1;\n  if (searchValue === '') return fromIndex;\n  return indexOf(string, searchValue, fromIndex);\n};\n\n// `String.prototype.replaceAll` method\n// https://tc39.es/ecma262/#sec-string.prototype.replaceall\n$({ target: 'String', proto: true }, {\n  replaceAll: function replaceAll(searchValue, replaceValue) {\n    var O = requireObjectCoercible(this);\n    var IS_REG_EXP, flags, replacer, string, searchString, functionalReplace, searchLength, advanceBy, replacement;\n    var position = 0;\n    var endOfLastMatch = 0;\n    var result = '';\n    if (searchValue != null) {\n      IS_REG_EXP = isRegExp(searchValue);\n      if (IS_REG_EXP) {\n        flags = toString(requireObjectCoercible('flags' in RegExpPrototype\n          ? searchValue.flags\n          : getFlags(searchValue)\n        ));\n        if (!~indexOf(flags, 'g')) throw TypeError('`.replaceAll` does not allow non-global regexes');\n      }\n      replacer = getMethod(searchValue, REPLACE);\n      if (replacer) {\n        return call(replacer, searchValue, O, replaceValue);\n      } else if (IS_PURE && IS_REG_EXP) {\n        return replace(toString(O), searchValue, replaceValue);\n      }\n    }\n    string = toString(O);\n    searchString = toString(searchValue);\n    functionalReplace = isCallable(replaceValue);\n    if (!functionalReplace) replaceValue = toString(replaceValue);\n    searchLength = searchString.length;\n    advanceBy = max(1, searchLength);\n    position = stringIndexOf(string, searchString, 0);\n    while (position !== -1) {\n      replacement = functionalReplace\n        ? toString(replaceValue(searchString, position, string))\n        : getSubstitution(searchString, string, position, [], undefined, replaceValue);\n      result += stringSlice(string, endOfLastMatch, position) + replacement;\n      endOfLastMatch = position + searchLength;\n      position = stringIndexOf(string, searchString, position + advanceBy);\n    }\n    if (endOfLastMatch < string.length) {\n      result += stringSlice(string, endOfLastMatch);\n    }\n    return result;\n  }\n});\n","<template>\r\n  <div>\r\n    <v-card class=\"mx-auto\" outlined>\r\n      <v-list-item>\r\n        <v-list-item-content>\r\n          <v-list-item-title class=\"display-1\"> TESTS </v-list-item-title>\r\n          <v-list-item-subtitle\r\n            >Run the teacher tests and create your owns!</v-list-item-subtitle\r\n          >\r\n        </v-list-item-content>\r\n\r\n        <v-list-item-avatar tile size=\"80\" color=\"blue\">\r\n          <v-icon large color=\"white\"> mdi-robot-confused </v-icon>\r\n        </v-list-item-avatar>\r\n      </v-list-item>\r\n      <v-data-table\r\n        :headers=\"headers\"\r\n        :items=\"tests\"\r\n        sort-by=\"input\"\r\n        group-by=\"type\"\r\n        class=\"elevation-1\"\r\n      >\r\n        <template v-slot:top>\r\n          <v-toolbar flat>\r\n            <v-dialog v-model=\"dialog\" max-width=\"500px\">\r\n              <template v-slot:activator=\"{ on, attrs }\">\r\n                <v-btn\r\n                  @click=\"run\"\r\n                  color=\"success\"\r\n                  :disabled=\"getErrors\"\r\n                  class=\"mb-2 mr-2\"\r\n                  v-bind=\"attrs\"\r\n                >\r\n                  Run Tests\r\n                </v-btn>\r\n                <!--<v-btn color=\"primary\" dark class=\"mb-2\" v-bind=\"attrs\" v-on=\"on\">-->\r\n                <v-btn\r\n                  color=\"primary\"\r\n                  dark\r\n                  class=\"mb-2\"\r\n                  v-bind=\"attrs\"\r\n                  @click=\"newTest\"\r\n                >\r\n                  New Test\r\n                </v-btn>\r\n              </template>\r\n              <v-card>\r\n                <v-card-title>\r\n                  <span class=\"headline\">{{ formTitle }}</span>\r\n                </v-card-title>\r\n                <v-card-text>\r\n                  <v-container>\r\n                    <v-row>\r\n                      <v-col cols=\"12\" sm=\"6\" md=\"4\">\r\n                        <v-text-field\r\n                          v-model=\"editedItem.input\"\r\n                          label=\"Input data\"\r\n                        ></v-text-field>\r\n                      </v-col>\r\n                      <v-col cols=\"12\" sm=\"6\" md=\"4\">\r\n                        <v-text-field\r\n                          v-model=\"editedItem.expected\"\r\n                          label=\"Expected\"\r\n                        ></v-text-field>\r\n                      </v-col>\r\n                    </v-row>\r\n                  </v-container>\r\n                </v-card-text>\r\n\r\n                <v-card-actions>\r\n                  <v-spacer></v-spacer>\r\n                  <v-btn color=\"blue darken-1\" text @click=\"close\">\r\n                    Cancel\r\n                  </v-btn>\r\n                  <v-btn color=\"blue darken-1\" text @click=\"save\"> Save </v-btn>\r\n                </v-card-actions>\r\n              </v-card>\r\n            </v-dialog>\r\n            <v-dialog v-model=\"dialogDelete\" max-width=\"500px\">\r\n              <v-card>\r\n                <v-card-title class=\"headline\"\r\n                  >Are you sure you want to delete this test?</v-card-title\r\n                >\r\n                <v-card-actions>\r\n                  <v-spacer></v-spacer>\r\n                  <v-btn color=\"blue darken-1\" text @click=\"closeDelete\"\r\n                    >Cancel</v-btn\r\n                  >\r\n                  <v-btn color=\"blue darken-1\" text @click=\"deleteItemConfirm\"\r\n                    >OK</v-btn\r\n                  >\r\n                  <v-spacer></v-spacer>\r\n                </v-card-actions>\r\n              </v-card>\r\n            </v-dialog>\r\n          </v-toolbar>\r\n        </template>\r\n        <template v-slot:group.header=\"{ items, isOpen, toggle }\">\r\n          <th colspan=\"3\">\r\n            <v-icon @click=\"toggle\"\r\n              >{{\r\n                items[0].type == \"metric\"\r\n                  ? \"mdi-firework\"\r\n                  : items[0].type == \"log\"\r\n                  ? \"mdi-math-log\"\r\n                  : \"mdi-robot-confused\"\r\n              }}\r\n            </v-icon>\r\n\r\n            {{\r\n              items[0].type == \"metric\"\r\n                ? ` ${items[0].type} (extra challenge):`\r\n                : items[0].type == \"log\"\r\n                ? ` console logs:`\r\n                : ` general tests:`\r\n            }}\r\n          </th>\r\n        </template>\r\n        <template v-slot:item.input=\"{ item }\">\r\n          {{ item.alias || item.input }}\r\n        </template>\r\n        <template v-slot:item.output=\"{ item }\">\r\n          <v-chip :color=\"getColor(item)\" dark>\r\n            {{ item.output }}\r\n          </v-chip>\r\n        </template>\r\n        <template v-slot:item.expected=\"{ item }\">\r\n          {{\r\n            item.options && !item.options.showExpected\r\n              ? \"hidden\"\r\n              : item.expected\r\n          }}\r\n        </template>\r\n      </v-data-table>\r\n      <!-- <br />\r\n       <v-alert\r\n      color=\"#2A3B4D\"\r\n      dark\r\n      icon=\"mdi-firework\"\r\n      dense\r\n    >\r\n      <strong>EXTRA CHALLENGES</strong>\r\n    </v-alert>\r\n      <v-data-table\r\n        :headers=\"headers2\"\r\n        :items=\"tests2\"\r\n        sort-by=\"input\"\r\n        class=\"elevation-1\"\r\n      >\r\n        <template v-slot:item.output=\"{ item }\">\r\n          <v-chip :color=\"getColor(item)\" dark>\r\n            {{ item.output }}\r\n          </v-chip>\r\n        </template>\r\n      </v-data-table> -->\r\n    </v-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/* import { QUnit } from \"qunit\"; */\r\nimport Swal from \"sweetalert2\";\r\nimport { html2dom } from \"@/assets/utils/html2dom.js\";\r\nimport \"sweetalert2/src/sweetalert2.scss\";\r\nimport { mapGetters, mapMutations } from \"vuex\";\r\n/* import * as LJS from \"@/assets/utils/test.js\";\r\n */ export default {\r\n  name: \"Tests\",\r\n  props: {\r\n    resource: Object,\r\n    errors: Array,\r\n    logs: Array,\r\n  },\r\n  data: () => ({\r\n    dialog: false,\r\n    dialogDelete: false,\r\n    headers: [\r\n      {\r\n        text: \"Input\",\r\n        align: \"start\",\r\n        sortable: true,\r\n        value: \"input\",\r\n      },\r\n      { text: \"Type\", value: \"type\" },\r\n      { text: \"Output\", value: \"output\" },\r\n      { text: \"Expected\", value: \"expected\" },\r\n    ],\r\n    headers2: [\r\n      {\r\n        text: \"Input\",\r\n        align: \"start\",\r\n        sortable: true,\r\n        value: \"input\",\r\n      },\r\n      { text: \"Output\", value: \"output\" },\r\n      { text: \"Expected\", value: \"expected\" },\r\n    ],\r\n    editedIndex: -1,\r\n    editedItem: {\r\n      input: \"\",\r\n      output: \"\",\r\n      expected: \"\",\r\n    },\r\n    defaultItem: {\r\n      input: \"\",\r\n      output: \"\",\r\n      expected: \"\",\r\n    },\r\n    code: \"\",\r\n    nTestsSuccess: 0,\r\n  }),\r\n\r\n  computed: {\r\n    formTitle() {\r\n      return this.editedIndex === -1 ? \"New Test\" : \"Edit Test\";\r\n    },\r\n    tests() {\r\n      return this.resource.tests;\r\n    },\r\n    getErrors() {\r\n      return this.errors.some((error) => error.type == \"error\");\r\n    },\r\n    /* tests2() {\r\n      return this.resource.tests.filter((test) => test.type == \"metric\");\r\n    }, */\r\n    ...mapGetters([\"getProgressFromResourceId\"]),\r\n  },\r\n\r\n  watch: {\r\n    dialog(val) {\r\n      val || this.close();\r\n    },\r\n    dialogDelete(val) {\r\n      val || this.closeDelete();\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    ...mapMutations([\"setProgress\"]),\r\n\r\n    newTest() {\r\n      Swal.fire(\r\n        \"Not available!\",\r\n        \"Creating tests will be a hot feature in the next version of learnJS\",\r\n        \"info\"\r\n      );\r\n    },\r\n\r\n    /* run2() {\r\n      this.code = this.getProgressFromResourceId(this.resource.id).code;\r\n        \r\n      QUnit.testDone(( details ) => {console.log(details);});\r\n      QUnit.start()\r\n      function square() {\r\n        return x * x;\r\n      }\r\n      QUnit.test(\"square()\", (assert) => {\r\n        assert.equal(this.code, 4, \"square(2)\");\r\n                \r\n      });\r\n    }, */\r\n\r\n    run() {\r\n      // Save the code\r\n      this.$emit(\"onSaveCode\");\r\n\r\n      setTimeout(() => {\r\n        this.nTestsSuccess = 0;\r\n        this.code = this.getProgressFromResourceId(this.resource.id).code;\r\n\r\n        const originalCode = this.code;\r\n\r\n        if (this.resource.html) {\r\n          this.code = `          \r\n          ${html2dom.parse(this.resource.html)}\\n          \r\n          ${this.code.replaceAll(\"document\", \"docFragment\")}\r\n          `;\r\n        }\r\n\r\n        // Expressions\r\n        this.tests.forEach((test) => {\r\n          let res;\r\n          console.log(\"2. run test->\" + test.type);\r\n          if (test.type == \"log\") {\r\n            res = this.logs.map((log) => log.text).join(\"\");\r\n            console.log(\"3. result->\" + res);\r\n          } else if (test.type == \"expression\") {\r\n            try {\r\n              if (test.subtype) {\r\n                eval(`${this.code}\\n${test.input}`);\r\n                res = \"no error\";\r\n              } else {\r\n                res = eval(`${this.code}\\n${test.input}`);\r\n                res = typeof res === \"undefined\" ? `No assigned value` : res;\r\n              }\r\n            } catch (error) {\r\n              if (test.subtype) {\r\n                res = \"error\";\r\n              } else {\r\n                res = error.message;\r\n              }\r\n            }\r\n          } else if (test.type == \"metric\") {\r\n            if (test.subtype == \"lines\") {\r\n              let count = 0;\r\n              const lines = this.code.split(\"\\n\");\r\n              lines.forEach((line) => {\r\n                if (line.startsWith(\"//\") || line == \"\") {\r\n                  count++;\r\n                }\r\n              });\r\n              res = eval(`${lines.length - count} ${test.expected}`);\r\n            } else if (test.subtype == \"occurrences\") {\r\n              const keyword = test.input.split(\":\")[1];\r\n              const nOccurrences = (\r\n                this.code.match(new RegExp(keyword, \"g\")) || []\r\n              ).length;\r\n              res = nOccurrences;\r\n            } else if (test.subtype == \"keyword\") {\r\n              res = this.code.includes(test.input.split(\":\")[1]);\r\n            } else {\r\n              res = true;\r\n            }\r\n          } else {\r\n            let fct = eval(`(${this.code})`);\r\n            let arr = test.input.split(\" \").map(Number);\r\n            if (test.input == \"\") {\r\n              res = fct.call(null);\r\n            } else {\r\n              res = fct.call(null, ...arr);\r\n            }\r\n          }\r\n          test.output = String(res);\r\n\r\n          if (test.output == test.expected || res == true) {\r\n            this.nTestsSuccess++;\r\n          }\r\n          //res == test.expOutput\r\n          // ? (trs[index + 1].style.backgroundColor = \"green\")\r\n          //: (trs[index + 1].style.backgroundColor = \"red\");\r\n        });\r\n\r\n        //Update progress\r\n        const status = (this.nTestsSuccess / this.tests.length) * 100;\r\n        this.setProgress({\r\n          id: this.resource.id,\r\n          status: status,\r\n        });\r\n\r\n        this.code = originalCode;\r\n      }, 1000);\r\n    },\r\n\r\n    getColor(item) {\r\n      if (item.output == \"\") return \"white\";\r\n      else if (\r\n        item.output == item.expected ||\r\n        (item.type == \"metric\" && item.output == \"true\")\r\n      ) {\r\n        return \"green\";\r\n      } else return \"red\";\r\n    },\r\n\r\n    editItem(item) {\r\n      this.editedIndex = this.tests.indexOf(item);\r\n      this.editedItem = Object.assign({}, item);\r\n      this.dialog = true;\r\n    },\r\n\r\n    deleteItem(item) {\r\n      this.editedIndex = this.tests.indexOf(item);\r\n      this.editedItem = Object.assign({}, item);\r\n      this.dialogDelete = true;\r\n    },\r\n\r\n    deleteItemConfirm() {\r\n      this.tests.splice(this.editedIndex, 1);\r\n      this.closeDelete();\r\n    },\r\n\r\n    close() {\r\n      this.dialog = false;\r\n      this.$nextTick(() => {\r\n        this.editedItem = Object.assign({}, this.defaultItem);\r\n        this.editedIndex = -1;\r\n      });\r\n    },\r\n\r\n    closeDelete() {\r\n      this.dialogDelete = false;\r\n      this.$nextTick(() => {\r\n        this.editedItem = Object.assign({}, this.defaultItem);\r\n        this.editedIndex = -1;\r\n      });\r\n    },\r\n\r\n    save() {\r\n      if (this.editedIndex > -1) {\r\n        Object.assign(this.tests[this.editedIndex], this.editedItem);\r\n      } else {\r\n        this.tests.push(this.editedItem);\r\n      }\r\n      this.close();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-card',{staticClass:\"mx-auto\",attrs:{\"outlined\":\"\"}},[_c('v-list-item',[_c('v-list-item-content',[_c('v-list-item-title',{staticClass:\"display-1\"},[_vm._v(\" TESTS \")]),_c('v-list-item-subtitle',[_vm._v(\"Run the teacher tests and create your owns!\")])],1),_c('v-list-item-avatar',{attrs:{\"tile\":\"\",\"size\":\"80\",\"color\":\"blue\"}},[_c('v-icon',{attrs:{\"large\":\"\",\"color\":\"white\"}},[_vm._v(\" mdi-robot-confused \")])],1)],1),_c('v-data-table',{staticClass:\"elevation-1\",attrs:{\"headers\":_vm.headers,\"items\":_vm.tests,\"sort-by\":\"input\",\"group-by\":\"type\"},scopedSlots:_vm._u([{key:\"top\",fn:function(){return [_c('v-toolbar',{attrs:{\"flat\":\"\"}},[_c('v-dialog',{attrs:{\"max-width\":\"500px\"},scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar on = ref.on;\nvar attrs = ref.attrs;\nreturn [_c('v-btn',_vm._b({staticClass:\"mb-2 mr-2\",attrs:{\"color\":\"success\",\"disabled\":_vm.getErrors},on:{\"click\":_vm.run}},'v-btn',attrs,false),[_vm._v(\" Run Tests \")]),_c('v-btn',_vm._b({staticClass:\"mb-2\",attrs:{\"color\":\"primary\",\"dark\":\"\"},on:{\"click\":_vm.newTest}},'v-btn',attrs,false),[_vm._v(\" New Test \")])]}}]),model:{value:(_vm.dialog),callback:function ($$v) {_vm.dialog=$$v},expression:\"dialog\"}},[_c('v-card',[_c('v-card-title',[_c('span',{staticClass:\"headline\"},[_vm._v(_vm._s(_vm.formTitle))])]),_c('v-card-text',[_c('v-container',[_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"6\",\"md\":\"4\"}},[_c('v-text-field',{attrs:{\"label\":\"Input data\"},model:{value:(_vm.editedItem.input),callback:function ($$v) {_vm.$set(_vm.editedItem, \"input\", $$v)},expression:\"editedItem.input\"}})],1),_c('v-col',{attrs:{\"cols\":\"12\",\"sm\":\"6\",\"md\":\"4\"}},[_c('v-text-field',{attrs:{\"label\":\"Expected\"},model:{value:(_vm.editedItem.expected),callback:function ($$v) {_vm.$set(_vm.editedItem, \"expected\", $$v)},expression:\"editedItem.expected\"}})],1)],1)],1)],1),_c('v-card-actions',[_c('v-spacer'),_c('v-btn',{attrs:{\"color\":\"blue darken-1\",\"text\":\"\"},on:{\"click\":_vm.close}},[_vm._v(\" Cancel \")]),_c('v-btn',{attrs:{\"color\":\"blue darken-1\",\"text\":\"\"},on:{\"click\":_vm.save}},[_vm._v(\" Save \")])],1)],1)],1),_c('v-dialog',{attrs:{\"max-width\":\"500px\"},model:{value:(_vm.dialogDelete),callback:function ($$v) {_vm.dialogDelete=$$v},expression:\"dialogDelete\"}},[_c('v-card',[_c('v-card-title',{staticClass:\"headline\"},[_vm._v(\"Are you sure you want to delete this test?\")]),_c('v-card-actions',[_c('v-spacer'),_c('v-btn',{attrs:{\"color\":\"blue darken-1\",\"text\":\"\"},on:{\"click\":_vm.closeDelete}},[_vm._v(\"Cancel\")]),_c('v-btn',{attrs:{\"color\":\"blue darken-1\",\"text\":\"\"},on:{\"click\":_vm.deleteItemConfirm}},[_vm._v(\"OK\")]),_c('v-spacer')],1)],1)],1)],1)]},proxy:true},{key:\"group.header\",fn:function(ref){\nvar items = ref.items;\nvar isOpen = ref.isOpen;\nvar toggle = ref.toggle;\nreturn [_c('th',{attrs:{\"colspan\":\"3\"}},[_c('v-icon',{on:{\"click\":toggle}},[_vm._v(_vm._s(items[0].type == \"metric\" ? \"mdi-firework\" : items[0].type == \"log\" ? \"mdi-math-log\" : \"mdi-robot-confused\")+\" \")]),_vm._v(\" \"+_vm._s(items[0].type == \"metric\" ? (\" \" + (items[0].type) + \" (extra challenge):\") : items[0].type == \"log\" ? \" console logs:\" : \" general tests:\")+\" \")],1)]}},{key:\"item.input\",fn:function(ref){\nvar item = ref.item;\nreturn [_vm._v(\" \"+_vm._s(item.alias || item.input)+\" \")]}},{key:\"item.output\",fn:function(ref){\nvar item = ref.item;\nreturn [_c('v-chip',{attrs:{\"color\":_vm.getColor(item),\"dark\":\"\"}},[_vm._v(\" \"+_vm._s(item.output)+\" \")])]}},{key:\"item.expected\",fn:function(ref){\nvar item = ref.item;\nreturn [_vm._v(\" \"+_vm._s(item.options && !item.options.showExpected ? \"hidden\" : item.expected)+\" \")]}}])})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??ref--13-1!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tests.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/@vue/cli-plugin-babel/node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js??ref--13-1!../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tests.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Tests.vue?vue&type=template&id=15af675a&\"\nimport script from \"./Tests.vue?vue&type=script&lang=js&\"\nexport * from \"./Tests.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardActions } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VCardTitle } from 'vuetify/lib/components/VCard';\nimport { VChip } from 'vuetify/lib/components/VChip';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VDataTable } from 'vuetify/lib/components/VDataTable';\nimport { VDialog } from 'vuetify/lib/components/VDialog';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VListItem } from 'vuetify/lib/components/VList';\nimport { VListItemAvatar } from 'vuetify/lib/components/VList';\nimport { VListItemContent } from 'vuetify/lib/components/VList';\nimport { VListItemSubtitle } from 'vuetify/lib/components/VList';\nimport { VListItemTitle } from 'vuetify/lib/components/VList';\nimport { VRow } from 'vuetify/lib/components/VGrid';\nimport { VSpacer } from 'vuetify/lib/components/VGrid';\nimport { VTextField } from 'vuetify/lib/components/VTextField';\nimport { VToolbar } from 'vuetify/lib/components/VToolbar';\ninstallComponents(component, {VBtn,VCard,VCardActions,VCardText,VCardTitle,VChip,VCol,VContainer,VDataTable,VDialog,VIcon,VListItem,VListItemAvatar,VListItemContent,VListItemSubtitle,VListItemTitle,VRow,VSpacer,VTextField,VToolbar})\n"],"sourceRoot":""}